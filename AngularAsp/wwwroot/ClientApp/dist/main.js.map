{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/checkout/checkout.component.css","webpack:///./app/checkout/checkout.component.html","webpack:///./app/checkout/checkout.component.ts","webpack:///./app/login/login.component.html","webpack:///./app/login/login.component.ts","webpack:///./app/shared/dataService.ts","webpack:///./app/shared/order.ts","webpack:///./app/shop/cart.component.html","webpack:///./app/shop/cart.component.ts","webpack:///./app/shop/productList.component.css","webpack:///./app/shop/productList.component.html","webpack:///./app/shop/productList.component.ts","webpack:///./app/shop/shop.component.html","webpack:///./app/shop/shop.component.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl:\"./app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  title = 'My Shop';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { AppComponent } from './app.component';\nimport { ProductList } from './shop/productList.component';\nimport { Cart } from './shop/cart.component';\nimport { DataService } from './shared/dataService';\nimport { Shop } from './shop/shop.component';\nimport { Checkout } from './checkout/checkout.component';\nimport { RouterModule } from '@angular/router';\nimport { Login } from './login/login.component';\nimport { FormsModule } from '@angular/forms';\n\nlet routes = [\n    { path: \"\", component: Shop },\n    { path: 'checkout', component: Checkout },\n    { path: 'login', component: Login}\n];\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ProductList,\n        Cart,\n        Shop,\n        Checkout,\n        Login\n    ],\n    imports: [\n        BrowserModule,\n        HttpModule,\n        RouterModule.forRoot(routes, {\n            useHash: true,\n            enableTracing: false     // for Debugging of the Routes\n        }),\n        FormsModule\n    ],\n    providers: [\n        DataService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".checkout-thumb {\\n  max-width: 100px;\\n}\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <h3>Confirm Order</h3>\\n  <table class=\\\"table table-bordered table-hover\\\">\\n    <tr *ngFor=\\\"let o of data.order.items\\\">\\n      <td><img src=\\\"/img/{{ o.productArtId }}.jpg\\\" alt=\\\"o.productTitle\\\" class=\\\"img-thumbnail checkout-thumb\\\" /></td>\\n      <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\\n      <td>{{ o.quantity }}</td>\\n      <td>{{ o.unitPrice|currency:'USD':\\\"symbol\\\" }}</td>\\n      <td>{{ (o.unitPrice * o.quantity)|currency:'USD':\\\"symbol\\\" }}</td>\\n    </tr>\\n  </table>\\n  <div class=\\\"col-md-4 col-md-offset-8 text-right\\\">\\n    <table class=\\\"table table-condensed\\\">\\n      <tr>\\n        <td class=\\\"text-right\\\">Subtotal</td>\\n        <td class=\\\"text-right\\\">{{ data.order.subtotal|currency:'USD':\\\"symbol\\\" }}</td>\\n      </tr>\\n      <tr>\\n        <td class=\\\"text-right\\\">Shipping</td>\\n        <td class=\\\"text-right\\\">$ 0.00</td>\\n      </tr>\\n      <tr>\\n        <td class=\\\"text-right\\\">Total:</td>\\n        <td class=\\\"text-right\\\">{{ data.order.subtotal|currency:'USD':\\\"symbol\\\" }}</td>\\n      </tr>\\n    </table>\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"onCheckout()\\\">Complete Purchase</button>\\n    <a routerLink=\\\"/\\\" class=\\\"btn btn-info\\\">Cancel</a>\\n  </div>\\n\\n</div>\"","﻿import { Component } from \"@angular/core\";\nimport { DataService } from '../shared/dataService';\n\n@Component({\n  selector: \"checkout\",\n  templateUrl: \"checkout.component.html\",\n  styleUrls: ['checkout.component.css']\n})\nexport class Checkout {\n\n  constructor(public data: DataService) {\n  }\n\n  onCheckout() {\n    // TODO\n    alert(\"Doing checkout\");\n  }\n}","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4 col-md-offset-4\\\">\\r\\n        <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-warning\\\">{{ errorMessage }}</div>\\r\\n        <form (submit)=\\\"onLogin()\\\" #theForm=\\\"ngForm\\\" novalidate>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"username\\\">Username</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"creds.username\\\" #username=\\\"ngModel\\\" required />\\r\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"username.touched && username.invalid && username.errors.required\\\">Username is requireds!</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"password\\\">Password</label>\\r\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"creds.password\\\" #password=\\\"ngModel\\\" required />\\r\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"password.touched && password.invalid && password.errors.required\\\">Password is requireds!</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Login\\\" [disabled]=\\\"theForm.invalid\\\" />\\r\\n                <a routerLink=\\\"/\\\" class=\\\"btn btn-default\\\">Cancel</a>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"","﻿import { Component } from '@angular/core';\r\nimport { DataService } from '../shared/dataService';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'login',\r\n    templateUrl: 'login.component.html'\r\n})\r\nexport class Login {\r\n    constructor(private data: DataService, private router: Router) { }\r\n\r\n    errorMessage: string = \"\";\r\n    public creds = {\r\n        username: \"\",\r\n        password: \"\"\r\n    };\r\n\r\n    onLogin() {\r\n        // Call the login service\r\n        this.data.login(this.creds)\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    if (this.data.order.items.length === 0) {\r\n                        this.router.navigate(['/']);\r\n                    } else {\r\n                        this.router.navigate(['checkout']);\r\n                    }\r\n                }\r\n\r\n            }, err => this.errorMessage = \"Failed to login\")\r\n    }\r\n}","﻿import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { Product } from './product';\r\nimport { Order, OrderItem } from './order';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n    constructor(private http: Http) { }\r\n\r\n    private token: string = \"\";\r\n    private tokenExpiration: Date;\r\n\r\n    public order: Order = new Order();\r\n\r\n    public products: Product[] = [];\r\n\r\n    public loadProducts(): Observable<boolean> {\r\n        return this.http.get('/api/products')\r\n            .pipe(map((result: Response) => this.products = result.json()));\r\n    }\r\n\r\n    public get loginRequired(): boolean {\r\n        return this.token.length == 0 || this.tokenExpiration > new Date();\r\n    }\r\n\r\n    login(creds): Observable<boolean> {\r\n        return this.http.post('/account/createtoken', creds)\r\n            .pipe(map((data: any) => {\r\n                this.token = data.token;\r\n                this.tokenExpiration = data.expiration;\r\n                return true;\r\n            }));\r\n    }\r\n\r\n    public addToOrder(newProduct: Product) {\r\n        let item: OrderItem = this.order.items.find(i => i.productId === newProduct.id);\r\n\r\n        if (item) {\r\n            item.quantity++;\r\n        }\r\n        else {\r\n            item = new OrderItem();\r\n            item.productId = newProduct.id;\r\n            item.productArtist = newProduct.artist;\r\n            item.productArtId = newProduct.artId;\r\n            item.productCategory = newProduct.category;\r\n            item.productSize = newProduct.size;\r\n            item.productTitle = newProduct.title;\r\n            item.unitPrice = newProduct.price;\r\n            item.quantity = 1;\r\n            this.order.items.push(item);\r\n        }\r\n    }\r\n}","﻿import * as _ from 'lodash';\r\n\r\nexport class Order {\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string;\r\n    items: Array<OrderItem> = new Array<OrderItem>();\r\n\r\n    get subtotal(): number {\r\n        return _.sum(_.map(this.items, i => i.quantity * i.unitPrice));\r\n    };\r\n}\r\n\r\nexport class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productSize: string;\r\n    productTitle: string;\r\n    productArtist: string;\r\n    productArtId: string;\r\n}","module.exports = \"<h3>Shopping Cart</h3>\\r\\n<div>#/Items: {{ data.order.items.length }}</div>\\r\\n<div>Subtotal: {{ data.order.subtotal }}</div>\\r\\n<table class=\\\"table table-condensed table-hover\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <td>Product</td>\\r\\n            <td>#</td>\\r\\n            <td>€</td>\\r\\n            <td>Total</td>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let o of data.order.items\\\">\\r\\n            <td>{{ o.productCategory }} - {{ o.productTitle }}</td>\\r\\n            <td>{{ o.quantity }}</td>\\r\\n            <td>{{ o.unitPrice | currency:\\\"EUR\\\":true }}</td>\\r\\n            <td>{{ (o.unitPrice * o.quantity) | currency:\\\"EUR\\\":\\\"symbol\\\" }}</td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n<button routerLink=\\\"checkout\\\" class=\\\"btn btn-success\\\" *ngIf=\\\"data.order.items.length > 0\\\" (click)=\\\"onCheckout()\\\">Checkout</button>\"","﻿import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: \"the-cart\",\r\n    templateUrl: \"cart.component.html\",\r\n    styleUrls: []\r\n})\r\nexport class Cart {\r\n    constructor(private data: DataService, private router: Router) {\r\n    }\r\n\r\n    onCheckout() {\r\n        if (this.data.loginRequired) {\r\n            // force login\r\n            this.router.navigate(['login']);\r\n        } else {\r\n            // go to checkout\r\n            this.router.navigate(['checkout']);\r\n        }\r\n    }\r\n}","module.exports = \".product-info img {\\r\\n    max-width: 100px;\\r\\n    float: left;\\r\\n    margin: 0 2px;\\r\\n    border: solid 1px black;\\r\\n}\\r\\n\\r\\n.product-info .product-name {\\r\\n    font-size: large;\\r\\n    font-weight: bold;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"product-info col-md-4\\\" *ngFor=\\\"let p of products\\\">\\r\\n        <div class=\\\"well bg-light col-lg-pull-1 m-1\\\">\\r\\n            <img src=\\\"/images/{{p.artId}}.jpg\\\" class=\\\"img-responsive\\\" [alt]=\\\"p.title\\\" />\\r\\n            <div class=\\\"product-name\\\">{{ p.category }} - {{ p.size }}</div>\\r\\n            <ul class=\\\"product-props\\\">\\r\\n                <li><strong>Price:</strong> {{ p.price | currency:\\\"EUR\\\":\\\"symbol\\\" }}</li>\\r\\n                <li><strong>Artist:</strong> {{ p.artist }}</li>\\r\\n                <li><strong>Title:</strong> {{ p.title }}</li>\\r\\n                <li><strong>Description:</strong> {{ p.artDescription }}</li>\\r\\n            </ul>\\r\\n            <button id=\\\"buyButton\\\" class=\\\"btn btn-success\\\" (click)=\\\"addProduct(p)\\\">Buy</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","﻿import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Product } from '../shared/product';\r\n\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl: \"productList.component.html\",\r\n    styleUrls: [\"productList.component.css\"]\r\n})\r\nexport class ProductList implements OnInit {\r\n    public products: Product[] = [];\r\n\r\n    constructor(private data: DataService) {\r\n        this.products = data.products;\r\n    }\r\n    ngOnInit(): void {\r\n        this.data.loadProducts()\r\n            .subscribe(() => this.products = this.data.products);\r\n    }\r\n\r\n    addProduct(product: Product) {\r\n        this.data.addToOrder(product);\r\n    }\r\n}","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-9\\\">\\r\\n        <h3>{{ title }}</h3>\\r\\n        <product-list></product-list>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n        <div class=\\\"well bg-light p-2\\\">\\r\\n            <the-cart></the-cart>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","﻿import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: \"the-shop\",\r\n    templateUrl: \"shop.component.html\"\r\n})\r\nexport class Shop {\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}